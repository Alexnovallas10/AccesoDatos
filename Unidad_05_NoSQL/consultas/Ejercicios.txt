1-Importar el contenido de cada fichero (el fichero es una colecci�n) de jugadores, entrenadores y equipos.

mongoimport --host localhost --port 27017 --db nba --collection entrenadores --file D:\alex\Acceso_a_datos\nba\entrenadores.json

2-Consultar el identificador de equipo de Los Angeles Lakers y crear otra consulta para ver los jugadores de dicho equipo.

> db.equipos.find({"fullName": { $eq: "Los Angeles Lakers"}},{"teamId":1}).pretty()
{ "_id" : ObjectId("5c5b1bdd6f8a9130647c682c"), "teamId" : "1610612747" }


db.jugadores.find({"teamId": "1610612747"}).pretty()

3-Consultar los jugadores espa�oles

db.jugadores.find({"country":"Spain"}).pretty()


4-Consultar los jugadores que miden m�s de 2.10 metros.

 db.jugadores.find({"heightMeters":{$gt:"2.10"}}).sort({"heightMeters": -1}).pretty()

5-Consultar el n�mero de jugadores de cada posici�n.

db.jugadores.count({"pos":"C"}) --------56
db.jugadores.count({"pos":"G"}) -------194
db.jugadores.count({"pos":"F"}) -------163
db.jugadores.count({"pos":"G-F"}) ------34
db.jugadores.count({"pos":"C-F"}) ------14

6-Consultar los equipos que son franquicias NBA.

db.equipos.find({"isNBAFranchise": true}).pretty()

7-Consultar los equipos de la conferencia Oeste.

 db.equipos.find({"confName":"West"}).pretty()

8-Consultar los entrenadores principales, isAssistant: false

db.entrenadores.find({"isAssistant": false}).pretty()

9- Jugadores que han estado en los lakers pero ahora no

db.jugadores.find({"teamId":{$ne:"1610612747"},"teams":{ $elemMatch:{teamId: "1610612747"}}}).pretty()

10- Jugador con el pickNum = 1

db.jugadores.find({"draft.pickNum":{$eq: '1'}}).pretty()

11- Jugadores de los lakers con sus nombres en mayusulas

db.jugadores.aggregate([
{"$project":{"firstName":"$firstName", "lastName":{"$toUpper":"$lastName"}, "teamId":"$teamId"}},
{"$match": {"teamId": {$eq:"1610612747"}}}])


--------------------------------------------------------------------------------------------------------------------------


1- Altura media y peso medio de los jugadores por cada equipo de la NBA.

db.jugadores.aggregate(
   [

      {
        $group : {
           _id : { "teamId": "$teamId"},
           "MediaAltura": { $avg:{$toDouble: "$heightMeters" }},
  	   "MediaPeso": { $avg: {$toDouble: "$weightKilograms" }},
           
        }
      }
   ]
).pretty()


2- Nombre del jugador que más años lleva en la NBA.

db.jugadores.aggregate([{$match: {"nbaDebutYear": {$ne: ""}}}, 
{$project: {"nbaDebutYear": {$toInt: "$nbaDebutYear"}, "firstName": "$firstName"}}, 
{$group: {_id: null,"nbaDebutYear": {$min: "$nbaDebutYear"},"firstName": {$first: "$firstName"}}}])

mongoimport --host localhost --port 27017 --db nba --collection calendario --file "D:\alex\Acceso_a_datos\nba\calendario.json"

3- Partidos en los que el equipo visitante ha metido más de 100 puntos y no ha ganado.

db.calendario.aggregate([{$project: {
  "vTeam.score" : {$toInt : "$vTeam.score"},
  "vTeam.loss" : 1,
  "vTeam.teamId" : 1,
  "vTeam.win" : 1
}}, {$match: 
{
  "vTeam.score" : {$gt: 100},
  "vTeam.loss" : "1",
}}])


4- Nombre, apellidos y Edad en años de los jugadores, grabar el resultado en una colección nueva llamada jugadores_edad.



5- Nombre, Apellido y posición del jugador de mayor y menor edad de la NBA.



6- Paises de procedencia de los jugadores. Ordenar alfabéticamente.

db.jugadores.aggregate([{$group: {_id: "$country",}}, {$sort: {_id: 1}}])


7- Mostrar los jugadores que han estado en más equipos en su carrera. Limitar a 15 registros el resultado.

db.jugadores.aggregate([{$project: {
  firstName : 1,
  lastName : 1,
  "numberTeams" : {$size : "$teams"}
}}, {$sort: {
  "numberTeams": -1
}}, {$limit: 15}])
